{
	"name":"structSort",
	"type":"function",
	"syntax":"structSort(base, sorttype, sortorder, pathtosubelement)",
	"returns":"Array",
	"related":[],
	"description":" Returns a sorted array of the top level keys in a structure.\n Sorts using alphabetic or numeric sorting, and can sort based\n on the values of any structure element.",
	"params": [
		{"name":"base","description":"","required":true,"default":"","type":"Struct","values":[]},
		{"name":"sorttype","description":"* numeric\n * text: case sensitive Default.\n * textnocase","required":true,"default":"","type":"String","values":["numeric","text","textnocase"]},
		{"name":"sortorder","description":"* asc: ascending (a to z) sort order. Default.\n * desc: descending (z to a) sort order","required":true,"default":"","type":"String","values":[]},
		{"name":"pathtosubelement","description":"String or a variable that contains one","required":true,"default":"","type":"String","values":[]}

	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-s/structsort.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/functions/structsort.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/structsort"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/structsort"}
	},
	"links": [

	],
	"examples": [
        {
            "title": "Simple example for structSort function",
            "description": "Uses the structSort() function to get the sorted structure",
            "code": "SomeStruct = {red=93,yellow=90,green=94};\nresult = structSort(SomeStruct, \"numeric\", \"desc\");\nwriteOutput( lcase(serializeJSON(result)) );",
            "result": "[\"green\", \"red\", \"yellow\"]"
        },
        {
            "title": "Simple example for structSort function with pathtosubelement",
            "description": "Uses the structSort() function to get the sorted structure",
            "code": "somestruct = {};\nsomeStruct.scott = {age=26, department=\"General\"};\nsomeStruct.glan = {age=29, department=\"computer\"};\nsomeStruct.george = {age=31, department=\"Physical\"};\nresult = structSort(somestruct, \"textnocase\", \"asc\", \"department\");\nwriteOutput( lcase(serializeJSON(result)) );",
            "result": "[\"glan\",\"scott\",\"george\"]"
        }
    ]

}
